You are an expert full-stack engineer.

Goal  
Create the “minimum viable” ADHD task-manager prototype consisting of:
1. A React + Vite + TypeScript PWA that runs in a desktop browser.
2. A Google Apps Script acting as a REST API backed by a single Google Sheet.

Specifications  
● Google Sheet  
  - Tab name: Tasks  
  - Columns (row 1 = header):  
    A: ID (UUID, string)  
    B: Title (string)  
    C: DueISO (ISO8601 date-time as text)  
    D: Priority (H, M, L)  
    E: EstPom (integer, estimated pomodoros)  
    F: SpentPom (integer, default 0)  
    G: Status (todo / doing / done)

● Apps Script (backend.gs)  
  - Provide `doGet(e)` → JSON list of tasks (exclude header row).  
  - Provide `doPost(e)` → add one task; body = JSON with title, due, priority, estPom.  
  - Provide `doPatch(e)` → increment SpentPom by 1 for a given taskId.  
  - Return `ContentService.createTextOutput(JSON.stringify(obj)).setMimeType(ContentService.MimeType.JSON)`.

● React PWA  
  - Pages/components:  
    • **TaskForm**: inputs Title, DueISO (`<input type="datetime-local">`), Priority (radio H/M/L), EstPom (select 1–8).  
    • **TaskList**: shows rows with Title, “Spent/Est Pom”, Due date, Status badge.  
    • **PomodoroTimer**: 25-minute focus + 5-minute break, increments SpentPom via PATCH when focus ends.  
  - State management with Zustand (or plain `useState` if easier).  
  - Repository pattern: `TaskRepository` interface; `SheetsRepository` implementation uses `fetch()` to call the Apps Script URL.  
  - Register Service Worker via `@vite-pwa/plugin`.

● Build & Deploy  
  1. User clones repo and runs `pnpm install && pnpm dev`.  
  2. To deploy: push to GitHub → Vercel free plan; set `VITE_API_BASE` env to the Apps Script “deploy as web app” URL (access set to Anyone).  
  3. Sheet owner must grant edit access to the Apps Script project.

Output format  
1. Provide **full code** for Apps Script (`backend.gs`).  
2. Provide **full code** for React project (only the essential files: `main.tsx`, `App.tsx`, components, `TaskRepository.ts`, `vite.config.ts`).  
3. Add concise setup instructions.  
4. **IMPORTANT:** Write all code comments and variable names in English. Write all narrative explanations, headings, and setup instructions in Japanese.

Return everything in a single answer. No extra chatter.